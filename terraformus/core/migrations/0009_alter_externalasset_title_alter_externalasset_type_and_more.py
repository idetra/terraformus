# Generated by Django 5.0.4 on 2024-09-18 13:36

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('core', '0008_homepagecontrol'),
    ]

    operations = [
        migrations.AlterField(
            model_name='externalasset',
            name='title',
            field=models.CharField(help_text='Give your asset a descriptive title', max_length=255),
        ),
        migrations.AlterField(
            model_name='externalasset',
            name='type',
            field=models.CharField(choices=[('doc', 'Document'), ('ref', 'Reference'), ('ex.', 'Working example')], default='Document', help_text='Choose the type of asset your are referencing to your solution', max_length=3),
        ),
        migrations.AlterField(
            model_name='externalasset',
            name='url',
            field=models.URLField(help_text='Insert the link to the asset'),
        ),
        migrations.AlterField(
            model_name='lifecycle',
            name='description',
            field=models.TextField(help_text='Describe with as much detail as possible what and how this life cycle/phase intends to achieve its goals'),
        ),
        migrations.AlterField(
            model_name='lifecycle',
            name='title',
            field=models.CharField(help_text='Give the lifecycle a descriptive but concise name', max_length=255),
        ),
        migrations.AlterField(
            model_name='lifecycle',
            name='total_duration',
            field=models.TextField(help_text='How long will it take to execute this entire life cycle/phase'),
        ),
        migrations.AlterField(
            model_name='lifecycleinput',
            name='notes',
            field=models.TextField(blank=True, help_text='Insert any notes that can help contextualizing this input', null=True),
        ),
        migrations.AlterField(
            model_name='lifecycleinput',
            name='quantity',
            field=models.IntegerField(help_text='How many units this input requires'),
        ),
        migrations.AlterField(
            model_name='lifecycleinput',
            name='reference_cost',
            field=models.IntegerField(help_text='What is the cost for each unit described above'),
        ),
        migrations.AlterField(
            model_name='lifecycleinput',
            name='resource_name',
            field=models.CharField(help_text='What is the name of this resource', max_length=255),
        ),
        migrations.AlterField(
            model_name='lifecycleinput',
            name='resource_type',
            field=models.CharField(choices=[('ma', 'Material'), ('se', 'Service'), ('hu', 'Human')], help_text='IS this a tangible or human resource', max_length=2),
        ),
        migrations.AlterField(
            model_name='lifecycleinput',
            name='unit',
            field=models.CharField(help_text='What is the resource unit (man-hour, kilo, liter, meter, etc)', max_length=255),
        ),
        migrations.AlterField(
            model_name='lifecyclewaste',
            name='cradle2cradle',
            field=models.BooleanField(default=False, help_text='Is this waste capable of returning to constituents components'),
        ),
        migrations.AlterField(
            model_name='lifecyclewaste',
            name='destination_method',
            field=models.TextField(help_text='How this waste will be disposed'),
        ),
        migrations.AlterField(
            model_name='lifecyclewaste',
            name='notes',
            field=models.TextField(blank=True, help_text='Insert any notes that can help contextualizing this waste management', null=True),
        ),
        migrations.AlterField(
            model_name='lifecyclewaste',
            name='quantity',
            field=models.IntegerField(help_text='How many waste units will be generated'),
        ),
        migrations.AlterField(
            model_name='lifecyclewaste',
            name='recyclable',
            field=models.BooleanField(default=False, help_text='Is this waste recyclable'),
        ),
        migrations.AlterField(
            model_name='lifecyclewaste',
            name='reference_cost',
            field=models.IntegerField(help_text='What is the cost for each unit described above'),
        ),
        migrations.AlterField(
            model_name='lifecyclewaste',
            name='reusable',
            field=models.BooleanField(default=False, help_text='Is this waste reusable'),
        ),
        migrations.AlterField(
            model_name='lifecyclewaste',
            name='unit',
            field=models.CharField(help_text='What is the waste unit (kilo, liter, meter, etc)', max_length=255),
        ),
        migrations.AlterField(
            model_name='lifecyclewaste',
            name='waste_type',
            field=models.CharField(help_text='What is the name of this waste', max_length=255),
        ),
        migrations.AlterField(
            model_name='solution',
            name='affordable_and_clean_energy',
            field=models.BooleanField(default=False, help_text='Affordable, clean energy'),
        ),
        migrations.AlterField(
            model_name='solution',
            name='apartment',
            field=models.BooleanField(default=False, help_text='Solutions for small homes'),
        ),
        migrations.AlterField(
            model_name='solution',
            name='apartment_building',
            field=models.BooleanField(default=False, help_text='For collective housing solutions'),
        ),
        migrations.AlterField(
            model_name='solution',
            name='automation',
            field=models.BooleanField(default=False, help_text='Your solution automates one or more processes'),
        ),
        migrations.AlterField(
            model_name='solution',
            name='city',
            field=models.BooleanField(default=False, help_text='Solutions for an entire city'),
        ),
        migrations.AlterField(
            model_name='solution',
            name='clean_water_and_sanitation',
            field=models.BooleanField(default=False, help_text='Clean water and sanitation for all'),
        ),
        migrations.AlterField(
            model_name='solution',
            name='climate_action',
            field=models.BooleanField(default=False, help_text='Takes climate action'),
        ),
        migrations.AlterField(
            model_name='solution',
            name='communication',
            field=models.BooleanField(default=False, help_text='Improves communication'),
        ),
        migrations.AlterField(
            model_name='solution',
            name='continent',
            field=models.BooleanField(default=False, help_text='solutions that impact a continent'),
        ),
        migrations.AlterField(
            model_name='solution',
            name='cost_type',
            field=models.PositiveSmallIntegerField(choices=[(0, '0 - Requires time, effort and/or scrap material'), (1, '$ - Up to USD 1.000 '), (2, '$$ - Between USD 1.000 and USD 50.000'), (3, '$$$ - Between USD 50.000 and USD 500.000'), (4, '$$$$ - Over USD 500.000')], default='0 - Requires time, effort and/or scrap material', help_text='What is the cost tier or your solution'),
        ),
        migrations.AlterField(
            model_name='solution',
            name='country',
            field=models.BooleanField(default=False, help_text='Solutions that impact an entire country'),
        ),
        migrations.AlterField(
            model_name='solution',
            name='county',
            field=models.BooleanField(default=False, help_text='Solutions for a geographic county'),
        ),
        migrations.AlterField(
            model_name='solution',
            name='decent_work_and_economic_growth',
            field=models.BooleanField(default=False, help_text='Decent work, economic growth'),
        ),
        migrations.AlterField(
            model_name='solution',
            name='depends_on',
            field=models.ManyToManyField(blank=True, help_text='FORM DEPENDENT', related_name='dependencies', to='core.solution'),
        ),
        migrations.AlterField(
            model_name='solution',
            name='derives_from',
            field=models.ForeignKey(blank=True, help_text='If your solution is branching out from another solution, refer it above.', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='derived_solutions', to='core.solution'),
        ),
        migrations.AlterField(
            model_name='solution',
            name='education',
            field=models.BooleanField(default=False, help_text='Education-related solutions'),
        ),
        migrations.AlterField(
            model_name='solution',
            name='energy',
            field=models.BooleanField(default=False, help_text='Energy production or improvement'),
        ),
        migrations.AlterField(
            model_name='solution',
            name='food',
            field=models.BooleanField(default=False, help_text='Related to food supply or production'),
        ),
        migrations.AlterField(
            model_name='solution',
            name='gender_equality',
            field=models.BooleanField(default=False, help_text='Ensures gender equality'),
        ),
        migrations.AlterField(
            model_name='solution',
            name='goal',
            field=models.TextField(help_text='What problem(s) your solution aims to solve'),
        ),
        migrations.AlterField(
            model_name='solution',
            name='good_health_and_well_being',
            field=models.BooleanField(default=False, help_text='Promotes health and well-being'),
        ),
        migrations.AlterField(
            model_name='solution',
            name='governance',
            field=models.BooleanField(default=False, help_text='Creates or Enhances governance systems'),
        ),
        migrations.AlterField(
            model_name='solution',
            name='health',
            field=models.BooleanField(default=False, help_text='Healthcare solutions'),
        ),
        migrations.AlterField(
            model_name='solution',
            name='house',
            field=models.BooleanField(default=False, help_text='Solutions for houses'),
        ),
        migrations.AlterField(
            model_name='solution',
            name='house_complex',
            field=models.BooleanField(default=False, help_text='Solutions for a housing complex'),
        ),
        migrations.AlterField(
            model_name='solution',
            name='housing',
            field=models.BooleanField(default=False, help_text='Related to housing solutions'),
        ),
        migrations.AlterField(
            model_name='solution',
            name='individual',
            field=models.BooleanField(default=False, help_text='For small or personal solutions'),
        ),
        migrations.AlterField(
            model_name='solution',
            name='industry_innovation_and_infrastructure',
            field=models.BooleanField(default=False, help_text='Builds industry and innovation'),
        ),
        migrations.AlterField(
            model_name='solution',
            name='infrastructure',
            field=models.BooleanField(default=False, help_text='Your solution improves or creates known infrastructure'),
        ),
        migrations.AlterField(
            model_name='solution',
            name='life_below_water',
            field=models.BooleanField(default=False, help_text='Protects life below water'),
        ),
        migrations.AlterField(
            model_name='solution',
            name='life_on_land',
            field=models.BooleanField(default=False, help_text='Protects life on land'),
        ),
        migrations.AlterField(
            model_name='solution',
            name='neighborhood',
            field=models.BooleanField(default=False, help_text='Solutions for an entire neighborhood'),
        ),
        migrations.AlterField(
            model_name='solution',
            name='no_poverty',
            field=models.BooleanField(default=False, help_text='Addresses poverty'),
        ),
        migrations.AlterField(
            model_name='solution',
            name='partnerships_for_the_goals',
            field=models.BooleanField(default=False, help_text='Builds global partnerships'),
        ),
        migrations.AlterField(
            model_name='solution',
            name='peace_justice_and_strong_institutions',
            field=models.BooleanField(default=False, help_text='Peace, justice, and strong institutions'),
        ),
        migrations.AlterField(
            model_name='solution',
            name='planet',
            field=models.BooleanField(default=False, help_text='Solutions for our entire planet'),
        ),
        migrations.AlterField(
            model_name='solution',
            name='quality_education',
            field=models.BooleanField(default=False, help_text='Improves education'),
        ),
        migrations.AlterField(
            model_name='solution',
            name='reduced_inequality',
            field=models.BooleanField(default=False, help_text='Reduces inequality'),
        ),
        migrations.AlterField(
            model_name='solution',
            name='responsible_consumption_and_production',
            field=models.BooleanField(default=False, help_text='Sustainable consumption and production'),
        ),
        migrations.AlterField(
            model_name='solution',
            name='scale_up',
            field=models.TextField(help_text='How to expand this solution'),
        ),
        migrations.AlterField(
            model_name='solution',
            name='security',
            field=models.BooleanField(default=False, help_text='Generates or improves security'),
        ),
        migrations.AlterField(
            model_name='solution',
            name='state',
            field=models.BooleanField(default=False, help_text='Solutions that impact an entire state'),
        ),
        migrations.AlterField(
            model_name='solution',
            name='street',
            field=models.BooleanField(default=False, help_text='Solutions for your entire street'),
        ),
        migrations.AlterField(
            model_name='solution',
            name='subtitle',
            field=models.CharField(help_text='An extension of the title you gave to your solution', max_length=255),
        ),
        migrations.AlterField(
            model_name='solution',
            name='sustainable_cities_and_communities',
            field=models.BooleanField(default=False, help_text='Sustainable cities and communities'),
        ),
        migrations.AlterField(
            model_name='solution',
            name='title',
            field=models.CharField(help_text='An identifiable unique name for this solution', max_length=255, unique=True),
        ),
        migrations.AlterField(
            model_name='solution',
            name='town',
            field=models.BooleanField(default=False, help_text='Solutions that impact a town'),
        ),
        migrations.AlterField(
            model_name='solution',
            name='transportation',
            field=models.BooleanField(default=False, help_text='Mobility related solutions'),
        ),
        migrations.AlterField(
            model_name='solution',
            name='update',
            field=models.TextField(help_text='How to modernize this solution'),
        ),
        migrations.AlterField(
            model_name='solution',
            name='upgrade',
            field=models.TextField(help_text='How to enhanced this solution'),
        ),
        migrations.AlterField(
            model_name='solution',
            name='water',
            field=models.BooleanField(default=False, help_text='Water supply or management'),
        ),
        migrations.AlterField(
            model_name='solution',
            name='zero_hunger',
            field=models.BooleanField(default=False, help_text='Stops hunger'),
        ),
        migrations.AlterField(
            model_name='strategy',
            name='definitions',
            field=models.TextField(help_text='Define what is being achieved by combining the solutions provided that cannot be achieved by them separately'),
        ),
        migrations.AlterField(
            model_name='strategy',
            name='goal',
            field=models.TextField(help_text='Describe in details the problems this strategy aims to solve'),
        ),
        migrations.AlterField(
            model_name='strategy',
            name='solutions',
            field=models.ManyToManyField(help_text='What are the solutions that comprise this strategy', to='core.strategysolution'),
        ),
        migrations.AlterField(
            model_name='strategy',
            name='title',
            field=models.CharField(help_text='Give your strategy an identifiable unique name', max_length=255, unique=True),
        ),
        migrations.AlterField(
            model_name='strategysolution',
            name='notes',
            field=models.TextField(help_text='Contextualize this solution from the perspective of this strategy'),
        ),
    ]
